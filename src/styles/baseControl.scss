/* stylelint-disable no-descending-specificity */
$padding: 0.7em; //var(--controlPadding, 0.7em);
$focusColor: var(--controlFocusColor, #1976d2);
$labelColor: var(--controlLabelColor, #1359a0);
$background: var(--controlBackground, white);
$backgroundDisabled: var(--controlDisabledBackground, #ebebe3);
$textColorDisabled: var(--controlDisabledTextColor, #737373);
$errorTextColor: var(--controlErrorTextColor, #b70000); //#f44336;
$errorColor: var(--controlErrorFrameColor, red);
$borderRadius: var(--borderRadius, 3px);

.uiBaseControl {
  margin-top: 2em;
  display: block;
  //text of label
  > *:first-child {
    display: block;
    position: absolute;
    z-index: 1;
    margin: 0 ($padding - 0.2em);
    padding: 0 0.2em;
    transform: translateY(0.2em - $padding);
    color: $labelColor;
    background: $background;
    transition: transform 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;
  }
  //asterisk-mark
  &[data-required="true"] > *:first-child {
    &::after {
      content: "*";
      font-size: larger;
      font-weight: bolder;
      line-height: 0;
      padding: 0 0.2em;
    }
  }

  //wrapper for input
  > *:nth-child(2) {
    display: block;
    position: relative;
    border: 1px solid #bdbdbd; //todo css-var
    border-radius: $borderRadius;
    padding: 1px; //fix for border-scaling
  }
  input,
  [contenteditable="true"] {
    font: inherit;
    padding: $padding;
    border: none;
    border-radius: $borderRadius;
    box-sizing: border-box;
    background: $background;
    transition: box-shadow 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;
    // fix for border-scaling
    // stylelint-disable-next-line plugin/no-unsupported-browser-features
    width: calc(100% + 2px);
    margin: -1px;
  }

  //common properties
  input:not([type="textarea"]),
  [contenteditable="true"] {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  ::placeholder {
    text-overflow: ellipsis;
  }
  input[disabled],
  [contenteditable="true"][disabled] {
    cursor: default;
    cursor: not-allowed;
    color: $textColorDisabled;
    //todo background: $backgroundDisabled;
  }

  //todo border and other frames for input only
  //frames
  &:hover > *:nth-child(2) {
    box-shadow: 0 0 4px 0 $focusColor;
  }
  &[data-invalid="true"]:hover > *:nth-child(2) {
    box-shadow: 0 0 4px 0 $errorColor;
  }
  &[data-invalid="true"] input,
  [contenteditable="true"] {
    box-shadow: 0 0 2px 1px $errorColor;
  }

  *:focus {
    box-shadow: 0 0 3px 2px $focusColor;
    // stylelint-disable-next-line plugin/no-unsupported-browser-features
    outline: none;
  }
  &[data-invalid="true"] input:focus,
  [contenteditable="true"]:focus {
    box-shadow: 0 0 3px 2px $errorColor;
  }

  [role="alert"] {
    font: inherit;
    color: $errorTextColor;
  }
}
