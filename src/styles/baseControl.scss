/* stylelint-disable no-descending-specificity */
$padding: var(--controlPadding, 0.7em);
$focusColor: var(--controlFocusColor, #1976d2);
$labelColor: var(--controlLabelColor, #1359a0);
$background: var(--controlBackground, white);
$backgroundDisabled: var(--controlDisabledBackground, #ebebe3);
$textColorDisabled: var(--controlDisabledTextColor, inherit); // #737373);
$errorTextColor: var(--controlErrorTextColor, #b70000); //#f44336;
$errorColor: var(--controlErrorFrameColor, red);
$borderRadius: var(--borderRadius, 3px);
$border: var(--controlBorder, 1px solid #bdbdbd);

.uiBaseControl {
  //margin-top: 2em;
  margin-top: 2.5em;
  display: block;
  fieldset {
    padding: 0;
    margin: 0;
    position: relative;
    border: $border;
    border-radius: $borderRadius;
  }

  legend {
    height: 0;
    padding: 0;
    margin: 0;
    color: $labelColor;
    &[aria-hidden="true"] {
      visibility: hidden;
      display: none;
    }
  }

  label {
    display: block;
    > span {
      display: block;
      position: absolute;
      z-index: 1;
      transition: transform 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;
      color: $labelColor;
      top: -1.4em;
      margin: 0;
      // background: $background;
      // margin: 0 ($padding - 0.1em);
      // transform: translateY(-$padding);
    }
  }

  //asterisk-mark
  &[data-required="true"] {
    legend,
    label > span {
      &::after {
        content: "*";
        font-size: larger;
        font-weight: bolder;
        line-height: 0;
        padding: 0 0.2em;
      }
    }
  }

  input,
  [contenteditable="true"] {
    color: inherit;
    font: inherit;
    padding: $padding;
    border: none;
    border-radius: $borderRadius;
    box-sizing: border-box;
    background: $background;
    transition: box-shadow 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;
    width: 100%;
  }

  //common properties
  input:not([type="textarea"]),
  [contenteditable="true"] {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  ::placeholder {
    text-overflow: ellipsis;
  }

  &[disabled] {
    fieldset {
      color: $textColorDisabled;
    }
    input,
    [contenteditable="true"] {
      background: $backgroundDisabled;
      cursor: default;
      cursor: not-allowed;
    }
  }

  //frames
  *:focus {
    box-shadow: 0 0 3px 1px $focusColor;
    // stylelint-disable-next-line plugin/no-unsupported-browser-features
    outline: none;
  }
  fieldset:hover {
    //border-color: $focusColor;
    box-shadow: 0 0 4px 0 $focusColor;
  }
  &[data-invalid="true"] {
    fieldset {
      border-color: $errorColor;
      box-shadow: 0 0 3px 0px $errorColor;
      &:hover {
        box-shadow: 0 0 3px 1px $errorColor;
      }
    }
    *:focus {
      box-shadow: 0 0 3px 1px $errorColor;
    }
  }

  [role="alert"] {
    font: inherit;
    color: $errorTextColor;
  }
}

//part of comboBox
$selectBackground: var(--controlMenuSelectBackground, #aecfea);
$selectTextColor: var(--controlSelectTextColor, black);
$itemHoverBackground: var(--controlMenuItemHoverBackground, #599dd4);
$itemHoverTextColor: var(--controlMenuItemHoverTextColor, white);
/* stylelint-disable-next-line no-duplicate-selector */
.uiBaseControl {
  ul {
    padding: 0;
    margin: 0;
    list-style-type: none;
    position: absolute;
    left: 0;
    z-index: 100;
    border-radius: $borderRadius;
    overflow: auto;
    background: $background;
    max-height: 180px;
    min-width: 100%;
    border: $border;
    box-sizing: border-box;
    > li {
      padding: $padding;
      &[aria-selected] {
        cursor: pointer;
        &:hover {
          background: $itemHoverBackground;
          color: $itemHoverTextColor;
        }
      }
      &[aria-selected="true"] {
        background: $selectBackground;
        color: $selectTextColor;
      }
    }
  }
}
