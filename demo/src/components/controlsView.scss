/* stylelint-disable no-descending-specificity */
.common {
  --anim: 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;
  --ctrl-padding: 1.4em 1em 0.6em 1em;
  --ctrl-focus: #00778d;
  --ctrl-focus-label: #00778d;
  --ctrl-selected: var(--ctrl-focus-label);
  --ctrl-label: #5e5e5e;
  --ctrl-back: #fff;
  --ctrl-border-radius: var(--border-radius, 6px);
  --ctrl-err: #ad0000;
  --ctrl-err-back: #fff4fa;
  --ctrl-invalid-border: red;
  --cltr-icon: var(--ctrl-label);
  --wup-icon-remove: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='768' height='768'%3E%3Cpath d='M674.515 93.949a45.925 45.925 0 0 0-65.022 0L384.001 318.981 158.509 93.487a45.928 45.928 0 0 0-65.022 0c-17.984 17.984-17.984 47.034 0 65.018l225.492 225.494L93.487 609.491c-17.984 17.984-17.984 47.034 0 65.018s47.034 17.984 65.018 0l225.492-225.492 225.492 225.492c17.984 17.984 47.034 17.984 65.018 0s17.984-47.034 0-65.018L449.015 383.999l225.492-225.494c17.521-17.521 17.521-47.034 0-64.559z'/%3E%3C/svg%3E");
  // todo button clear on controls

  //WARN: it's tricky rule
  contain: style; // otherwise it doesn't work for popup inside
  display: block;
  margin-bottom: 20px;
  position: relative;
  border-radius: var(--ctrl-border-radius);
  background: var(--ctrl-back);
  cursor: pointer;

  &:focus-within {
    outline: 1px solid var(--ctrl-focus);

    > [menu] {
      outline: 1px solid var(--ctrl-focus);
    }

    strong,
    legend {
      color: var(--ctrl-focus-label);
    }
  }

  input:focus + * {
    color: var(--ctrl-focus-label);
  }

  strong,
  legend {
    color: var(--ctrl-label);
  }

  &[disabled] {
    opacity: 0.8;
    cursor: not-allowed;
    -webkit-user-select: none;
    user-select: none;

    > * {
      pointer-events: none;
    }
  }

  &[invalid] {
    box-shadow: 0 0 3px 0 var(--ctrl-invalid-border);
    outline-color: var(--ctrl-invalid-border);
  }

  @media (pointer: fine), (hover) {
    &:hover {
      box-shadow: 0 0 3px 1px var(--ctrl-focus);

      > [menu] {
        box-shadow: 0 0 3px 1px var(--ctrl-focus);
      }
    }

    &[invalid]:hover {
      box-shadow: 0 0 3px 1px var(--ctrl-invalid-border);

      > [menu] {
        box-shadow: 0 0 3px 1px var(--ctrl-invalid-border);
      }
    }
  }

  label {
    display: flex;
    align-items: center;
    box-sizing: border-box;
    font: inherit;
    cursor: inherit;
    padding: var(--ctrl-padding);
    padding-top: 0;
    padding-bottom: 0;
  }

  label::before,
  label::after {
    box-sizing: content-box;
    cursor: pointer;
    flex: 0 0 auto;
    padding: var(--ctrl-padding);
    padding-left: 0;
    padding-right: 0;
    align-self: stretch;
  }

  label::before {
    margin-right: 0.5em;
  }

  label::after {
    margin-left: 0.5em;
  }

  input {
    padding: 0;
    margin: 0;
  }

  input,
  input + * {
    cursor: inherit;
  }

  input:required + *,
  fieldset[aria-required] > legend {
    &::after {
      content: "*";
      font-size: larger;
      font-weight: bolder;
      line-height: 0;
    }
  }

  [error] {
    cursor: pointer;
    font-size: small;
    color: var(--ctrl-err);
    background: var(--ctrl-err-back);
    margin: -4px 0;
  }
}

.textControl {
  cursor: text;

  label > span {
    width: 100%;
    position: relative;
  }

  input {
    width: 100%;
    box-sizing: border-box;
    font: inherit;
    margin: 0;
    padding: var(--ctrl-padding);
    padding-left: 0;
    padding-right: 0;

    border: none;
    background: none;
    outline: none;

    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
  }

  input + * {
    display: block;
    position: absolute;
    top: 50%;
    left: 0;

    padding: 0;
    margin: 0;
    box-sizing: border-box;

    max-width: 100%;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;

    @media not all and (prefers-reduced-motion) {
      transition: top var(--anim), transform var(--anim), color var(--anim);
    }
    transform-origin: top left;
    transform: translateY(-50%);

    font-weight: normal;
    text-decoration: none;
  }

  input:focus + *,
  input:not(:placeholder-shown) + *,
  legend {
    top: 0.2em;
    transform: scale(0.9);
  }
}

.slidebox {
  --ctrl-slide-padding: 1em;
  --ctrl-slide-off-back: #9f9f9f;
  --ctrl-slide-on-back: var(--ctrl-focus);
  --ctrl-slide-on: #fff;
  --ctrl-slide-off: #fff;
  --ctrl-slide-shadow: #0003;
  --ctrl-slide-size-h: 1em;
  --ctrl-slide-size-w: calc(var(--ctrl-slide-size-spot) * 2);
  --ctrl-slide-size-spot: 1.4em;

  margin-bottom: 10px;
  background: none;
  cursor: pointer;

  label {
    padding: var(--ctrl-slide-padding);

    input:focus + * {
      color: var(--ctrl-focus-label);
    }
  }

  input {
    position: absolute;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip: rect(1px, 1px, 1px, 1px); /* from https://snook.ca/archives/html_and_css/hiding-content-for-accessibility */
    outline: none;
  }

  input + * {
    box-sizing: border-box;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    font-weight: normal;
    text-decoration: none;
    color: var(--ctrl-label);
  }

  input + * + * {
    margin-left: 0.5em;
    position: relative;
    width: var(--ctrl-slide-size-w);
    height: var(--ctrl-slide-size-h);
    border-radius: 999px;
    background: var(--ctrl-slide-off-back);

    @media not all and (prefers-reduced-motion) {
      transition: background-color var(--anim);
    }

    &::before {
      content: "";
      position: absolute;
      height: var(--ctrl-slide-size-spot);
      width: var(--ctrl-slide-size-spot);
      left: -1px; // to prevent edge-cutting on render
      top: 50%;
      transform: translateY(-50%);
      background: var(--ctrl-slide-off);
      box-shadow: 0 1px 4px 0 var(--ctrl-slide-shadow);
      border-radius: 50%;

      @media not all and (prefers-reduced-motion) {
        transition: left var(--anim);
      }
    }
  }

  input:checked + * + * {
    background-color: var(--ctrl-slide-on-back);

    &::before {
      background: var(--ctrl-slide-on);
      left: calc(100% - var(--ctrl-slide-size-w) + var(--ctrl-slide-size-spot) + 1px);
    }
  }

  input:checked:disabled + * + * {
    opacity: 0.5;
  }
}

// reverse style
.slideboxReverse {
  label {
    flex-direction: row-reverse;

    input + * + * {
      margin-left: 0;
      margin-right: 0.5em;
    }
  }
}

.checkbox {
  --ctrl-check-off-back: #fff;
  --ctrl-check-on-back: var(--ctrl-focus);
  --ctrl-check-on: #fff;
  --ctrl-check-radius: 3px;
  --ctrl-check-shadow: #0003;
  --ctrl-check-size: 16px;
  --ctrl-check-img: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='768' height='768'%3E%3Cpath stroke='black' stroke-width='40' d='M37.691 450.599 224.76 635.864c21.528 21.32 56.11 21.425 77.478 0l428.035-426.23c21.47-21.38 21.425-56.11 0-77.478s-56.11-21.425-77.478 0L263.5 519.647 115.168 373.12c-21.555-21.293-56.108-21.425-77.478 0s-21.425 56.108 0 77.478z'/%3E%3C/svg%3E");
  // url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='46' height='46' xml:space='preserve'%3E%3Cpath d='M20.687 38.332a5.308 5.308 0 0 1-7.505 0L1.554 26.704A5.306 5.306 0 1 1 9.059 19.2l6.928 6.927a1.344 1.344 0 0 0 1.896 0L36.642 7.368a5.308 5.308 0 0 1 7.505 7.504l-23.46 23.46z'/%3E%3C/svg%3E");

  input + * + * {
    height: var(--ctrl-check-size);
    width: var(--ctrl-check-size);
    border-radius: var(--ctrl-check-radius);
    background: var(--ctrl-check-off-back);
    box-shadow: 0 0 2px 0 var(--ctrl-check-shadow);

    @media not all and (prefers-reduced-motion) {
      transition: background-color var(--anim);
    }

    &::before {
      content: none;
    }
  }

  input:checked + * + * {
    position: initial;
    background: var(--ctrl-check-on-back);

    &::before {
      content: "";
      position: initial;
      top: initial;
      left: initial;
      border-radius: 0;
      box-shadow: none;

      display: block;
      height: 100%;
      width: 100%;

      transform: none;
      transform: scale(0.8);
      background-color: var(--ctrl-check-on);

      /* stylelint-disable plugin/no-unsupported-browser-features */
      -webkit-mask-image: var(--ctrl-check-img);
      mask-image: var(--ctrl-check-img);
      -webkit-mask-size: contain;
      mask-size: contain;
      -webkit-mask-repeat: no-repeat;
      mask-repeat: no-repeat;
      -webkit-mask-position: center;
      mask-position: center;
      /* stylelint-enable plugin/no-unsupported-browser-features */
    }
  }
}

.checkboxReverse {
  label {
    flex-direction: row-reverse;

    input + * + * {
      margin-left: 0;
      margin-right: 0.5em;
    }
  }
}

.radioGroup {
  --ctrl-radio-size: 14px;
  --ctrl-radio-spot-size: 8px;
  --ctrl-radio-back: #fff;
  --ctrl-radio-off: #fff;
  --ctrl-radio-on: var(--ctrl-focus);
  --ctrl-radio-border: #0002;
  --ctrl-radio-border-size: 2px;
  --ctrl-radio-gap: 0.7em;

  padding: var(--ctrl-padding);

  fieldset {
    border: none;
    padding: 0;
    margin: calc(var(--ctrl-radio-gap) / -1);

    display: flex;
    flex-wrap: wrap;
  }

  legend,
  strong {
    display: block;
    position: absolute;
    transform-origin: top left;
    top: 0.2em;
    transform: scale(0.9);

    margin: 0 var(--ctrl-radio-gap);
    padding: 0;
    box-sizing: border-box;

    max-width: 100%;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;

    font-weight: normal;
    text-decoration: none;
  }

  label {
    padding: 0;
  }

  input {
    position: absolute;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip: rect(1px, 1px, 1px, 1px); /* from https://snook.ca/archives/html_and_css/hiding-content-for-accessibility */
    outline: none;
  }

  input + * {
    padding: var(--ctrl-radio-gap);
    cursor: pointer;
    display: inline-flex;
    align-items: center;

    &::after {
      content: "";
      // it's not relative because 1.2em of 14px provides round-pixel-issue and not always rounded items
      width: var(--ctrl-radio-size);
      height: var(--ctrl-radio-size);
      border: calc((var(--ctrl-radio-size) - var(--ctrl-radio-spot-size)) / 2) solid var(--ctrl-radio-back);
      box-sizing: border-box;
      background: var(--ctrl-radio-off);
      box-shadow: 0 0 1px var(--ctrl-radio-border-size) var(--ctrl-radio-border);
      border-radius: 50%;
      margin-left: 0.5em;

      @media not all and (prefers-reduced-motion) {
        transition: background-color var(--anim);
      }
    }
  }

  input:checked + *::after {
    background-color: var(--ctrl-radio-on);
  }

  input:focus + * {
    color: var(--ctrl-selected);

    &::after {
      box-shadow: 0 0 1px var(--ctrl-radio-border-size) var(--ctrl-selected);
    }
  }
  @media (pointer: fine), (hover) {
    input + *:hover {
      color: var(--ctrl-selected);

      &::after {
        box-shadow: 0 0 1px var(--ctrl-radio-border-size) var(--ctrl-selected);
      }
    }
  }
}

.combobox {
  --ctrl-combo-icon: var(--cltr-icon);
  --ctrl-combo-icon-size: 1em;
  --ctrl-combo-icon-img: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='768' height='768'%3E%3Cpath d='m16.078 258.214 329.139 329.139c21.449 21.449 56.174 21.449 77.567 0l329.139-329.139c21.449-21.449 21.449-56.174 0-77.567s-56.174-21.449-77.567 0L384 471.003 93.644 180.647c-21.449-21.449-56.173-21.449-77.567 0s-21.449 56.173 0 77.567z'/%3E%3C/svg%3E");
  --ctrl-combo-selected: inherit;
  --ctrl-combo-selected-back: #d9f7fd;

  cursor: pointer;

  input:not(:placeholder-shown) {
    cursor: text;
  }

  label::after {
    content: "";
    width: var(--ctrl-combo-icon-size);
    min-height: var(--ctrl-combo-icon-size);

    /* stylelint-disable plugin/no-unsupported-browser-features */
    background-color: var(--ctrl-combo-icon);
    -webkit-mask-image: var(--ctrl-combo-icon-img);
    mask-image: var(--ctrl-combo-icon-img);
    -webkit-mask-size: var(--ctrl-combo-icon-size);
    mask-size: var(--ctrl-combo-icon-size);
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-position: center;
    mask-position: center;
    /* stylelint-enable plugin/no-unsupported-browser-features */

    @media not all and (prefers-reduced-motion) {
      transition: transform var(--anim);
    }
  }

  @media (pointer: fine), (hover) {
    &:hover {
      label::after {
        background-color: var(--ctrl-focus);
      }
    }
  }

  &[opened] label::after {
    transform: rotate(180deg);
  }

  ul {
    margin: 0;
    padding: 0;
    list-style-type: none;
    cursor: pointer;
  }

  li {
    padding: 1em;
  }

  li:hover,
  li[aria-selected="true"] {
    color: var(--ctrl-combo-selected);
    background: var(--ctrl-combo-selected-back);
  }

  > [menu] {
    padding: 0;
  }
}

.multiselect {
  --ctrl-multi-item-back: #f5f5f5;
  --ctrl-multi-remove: var(--cltr-icon);
  --ctrl-multi-remove-img: var(--wup-icon-remove);
  --ctrl-multi-remove-size: 1em;
  --ctrl-multi-selected: #00768b;
  --ctrl-multi-selected-back: #eff9fa;
  --ctrl-multi-selected-remove: #00768b;
  --ctrl-multi-gap: 0.5em;

  label > span {
    display: flex;
    flex-wrap: wrap;
    padding: var(--ctrl-padding);
    padding-left: 0;
    padding-right: 0;
    margin: calc(var(--ctrl-multi-gap) / -2);

    > span,
    input {
      margin: calc(var(--ctrl-multi-gap) / 2);
      padding: var(--ctrl-multi-gap);
    }

    > span {
      display: flex;
      align-items: center;
      background-color: var(--ctrl-multi-item-back);
      border-radius: var(--ctrl-border-radius);
      cursor: pointer;

      &::after {
        content: "";
        display: inline-block;
        width: var(--ctrl-multi-remove-size);
        height: var(--ctrl-multi-remove-size);
        transform: scale(0.9);
        margin-left: 0.5em;
        background-color: var(--ctrl-multi-remove);

        /* stylelint-disable plugin/no-unsupported-browser-features */
        -webkit-mask-image: var(--wup-icon-remove);
        mask-image: var(--wup-icon-remove);
        -webkit-mask-size: contain;
        mask-size: contain;
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-position: center;
        mask-position: center;
        /* stylelint-enable plugin/no-unsupported-browser-features */
      }
    }

    @media (pointer: fine), (hover) {
      > span:hover {
        color: var(--ctrl-selected);
        background-color: var(--ctrl-multi-selected-back);

        &::after {
          background-color: var(--ctrl-multi-selected-remove);
        }
      }
    }

    input {
      width: 0; // to disable OS-defined-width
      min-width: 2em;
      background: #f7d4f7;
      padding-left: 0;
      padding-right: 0;
    }
  }

  strong {
    margin: calc(var(--ctrl-multi-gap) / 2);
  }

  input:focus + *,
  input:not(:placeholder-shown) + * {
    top: 0.2em;
  }
}

wup-popup[menu] {
  overflow: hidden;

  > ul {
    max-height: 300px; // todo we need to improve this
    overflow: auto;
  }
}
