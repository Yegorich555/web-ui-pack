.popupEx1 {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.trg {
  height: 100px;
  width: 300px;
  margin: 20px auto;
}

.fitBlock {
  width: 100%;
  height: 140px;
  margin: 20px auto;
  box-sizing: border-box;
  border: 1px solid $basicActiveBgColor;
  border-radius: $borderRadius;
}

.scrollBlock {
  // position: relative;
  overflow: auto;
  border: 1px solid $basicActiveBgColor;
  width: 100%;
  height: 140px;
  margin: 20px auto;

  > button {
    display: block;
    margin: 20px auto;
    padding: 10px;
  }

  > div {
    height: 140px;
    width: calc(100% + 100px);
  }
}

.scrollPopup {
  overflow: auto;
}

// simple dropdown animation
// @media not all and (prefers-reduced-motion) {
// .dropdownPopup {
//   animation: grow 500ms ease-in-out;
//   transform-origin: top center;

//   &[position="top"] {
//     transform-origin: bottom center;
//   }

//   @keyframes grow {
//     from {
//       transform: scaleY(0);
//     }
//   }
// }

// difficult dropdown animation
.dropdownPopup {
  // reset popup defaults
  animation: none;
  background: none;
  border: none;
  padding: 0;
  overflow: visible;
  box-shadow: none;

  $boxShadowSize: 4px;
  $animTime: 300ms;

  > div {
    // max-height: inherit; // css inherit doesn't work. Instead popup sets it itself
    overflow: hidden;
    background: inherit;

    // make box-shadow visible despite on overflow: hidden
    padding: $boxShadowSize;
    margin: -$boxShadowSize;
    @media not all and (prefers-reduced-motion) {
      animation: shadowFix $animTime ease-in-out;
      @keyframes shadowFix {
        from,
        to {
          padding-top: 0;
          margin-top: 1px;
        }
      }
    }

    // animated div: drawer-effect
    > div {
      max-height: inherit;
      max-width: inherit;
      background: white;
      border-radius: var(--border-radius, 6px);
      padding: 4px;
      box-shadow: 0 1px $boxShadowSize 0 #00000033;
      box-sizing: border-box;
      overflow: auto;

      @media not all and (prefers-reduced-motion) {
        animation: growOn $animTime ease-in-out;
        @keyframes growOn {
          from {
            transform: translateY(calc(-100% - #{$boxShadowSize}));
          }
        }
      }
    }
  }

  &[hide] {
    @media not all and (prefers-reduced-motion) {
      animation: none; // removing default animation
      animation-duration: $animTime; // required to notify popup to wait before close
      > div {
        padding-top: 0;
        margin-top: 1px;

        > div {
          animation: growOff $animTime ease-in-out;
          @keyframes growOff {
            to {
              transform: translateY(calc(-100% - #{$boxShadowSize}));
            }
          }
        }
      }
    }
  }

  @media not all and (prefers-reduced-motion) {
    &[position="top"] {
      > div {
        animation-name: shadowFixTop;

        > div {
          animation-name: growOnTop;
        }
      }

      &[hide] > div {
        padding-bottom: 0;
        margin-bottom: 1px;

        > div {
          animation-name: growOffTop;
        }
      }

      @keyframes growOnTop {
        from {
          transform: translateY(calc(100% - #{$boxShadowSize}));
        }
      }
      @keyframes growOffTop {
        to {
          transform: translateY(calc(100% - #{$boxShadowSize}));
        }
      }
      @keyframes shadowFixTop {
        from,
        to {
          padding-bottom: 0;
          margin-bottom: 1px;
        }
      }
    }
  }
  // end
}
