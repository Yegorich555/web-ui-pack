{
  "cSpell.ignoreWords": ["wupln", "aria-labelledby", "wupdark"],
  "cSpell.allowCompoundWords": true,
  // watchFix: path-intellisense doesn't work with none-js-files https://github.com/ChristianKohler/PathIntellisense/issues/110
  "path-autocomplete.includeExtension": true,
  "path-autocomplete.extensionOnImport": true,
  "path-autocomplete.excludedItems": {
    //watchFix: read path-alias from tsconfig.json
    "**/*.+(ts|js|jsx|tsx)": { "when": "**" }, // ignore js files because VSCode works fine with ones
    "**/*.map": { "when": "**" }, // always ignore *.map files
    "**/{.git,node_modules}": { "when": "**" }, // always ignore .git and node_modules folders
    "**/*": { "when": "**/*.+(less|css|scss|sass)" } //exclude for css files because VSCode works fine with ones
  },
  "stylelint.enable": true,
  "stylelint.validate": ["css", "less", "postcss", "scss"],
  "css.validate": false,
  "less.validate": false,
  "scss.validate": false,
  "todo-tree.filtering.excludeGlobs": ["**/node_modules"],
  /*
    if you want fix by format set the following in keybindings.json:
     {
      "key": "shift+alt+f",
      "command": "eslint.executeAutofix"
     }
  */
  "editor.codeActionsOnSave": {
    "source.fixAll.tslint": "explicit",
    "source.fixAll.eslint": "explicit",
    "source.fixAll.markdownlint": "explicit",
    "source.fixAll.stylelint": "explicit"
  },
  "eslint.validate": ["javascript", "javascriptreact", "typescript", "typescriptreact"],
  "editor.formatOnSave": false,
  "editor.formatOnPaste": true,
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.wordSeparators": "`~!@%^&*()-=+[{]}\\|;:'\",.<>/?" // ability to select private props '#prop'
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.wordSeparators": "`~!@%^&*()-=+[{]}\\|;:'\",.<>/?" // ability to select private props '#prop'
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.wordSeparators": "`~!@%^&*()-=+[{]}\\|;:'\",.<>/?" // ability to select private props '#prop'
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.wordSeparators": "`~!@%^&*()-=+[{]}\\|;:'\",.<>/?" // ability to select private props '#prop'
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.wordSeparators": "`!%&()[{]}|;'\",?#" // ability to select '$propery', 'json-variable', 'editor.wordSeparators', '>=0.0.2' at once
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.wordSeparators": "`~!%^&*()=+[{]}\\|;:'\",.<>/?$" // ability to select '#fff', 'font-family', '--cssVariable' at once
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.wordSeparators": "`~!%^&*()=+[{]}\\|;:'\",.<>/?" // ability to select '#fff', 'font-family', '--cssVariable', '$var' at once
  },
  "[less]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  // https://code.visualstudio.com/api/extension-guides/custom-data-extension
  // https://github.com/runem/web-component-analyzer => run: wca analyze src --format json --outFile custom-elements.json/
  "html.customData": ["types.html.json"]
  // "css.customData": ["./css.css-data.json"] // issue: https://github.com/microsoft/vscode-custom-data/issues/82
}
