// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`control.check $ariaDetails 1`] = `
<wup-check>
  <label
    for="txt1"
  >
    <input
      autocomplete="off"
      id="txt1"
      type="checkbox"
    />
    <strong />
    <span
      icon=""
    />
    <span
      class="wup-hidden"
    >
      Some details for screen-readers
    </span>
  </label>
</wup-check>
`;

exports[`control.check $ariaDetails 2`] = `
<wup-check>
  <label
    for="txt1"
  >
    <input
      autocomplete="off"
      id="txt1"
      type="checkbox"
    />
    <strong />
    <span
      icon=""
    />
  </label>
</wup-check>
`;

exports[`control.check $ariaSpeak 1`] = `
<wup-check>
  <label
    for="txt1"
  >
    <input
      aria-describedby="my-test-id txt2 my-test-id2"
      autocomplete="off"
      id="txt1"
      type="checkbox"
    />
    <strong />
    <span
      icon=""
    />
  </label>
  <section
    aria-atomic="true"
    aria-live="off"
    class="wup-hidden"
    id="txt2"
  >
    Hello
  </section>
</wup-check>
`;

exports[`control.check $ariaSpeak 2`] = `
<wup-check>
  <label
    for="txt1"
  >
    <input
      aria-describedby="my-test-id my-test-id2"
      autocomplete="off"
      id="txt1"
      type="checkbox"
    />
    <strong />
    <span
      icon=""
    />
  </label>
</wup-check>
`;

exports[`control.check $show/$hide error 1`] = `
<wup-check>
  <label
    for="txt1"
  >
    <input
      autocomplete="off"
      id="txt1"
      type="checkbox"
    />
    <strong />
    <span
      icon=""
    />
  </label>
</wup-check>
`;

exports[`control.check $show/$hide error 2`] = `
<wup-check
  invalid=""
>
  <label
    for="txt1"
  >
    <input
      aria-describedby="txt2"
      autocomplete="off"
      id="txt1"
      type="checkbox"
    />
    <strong />
    <span
      icon=""
    />
  </label>
  <wup-popup
    aria-atomic="true"
    aria-live="off"
    error=""
    id="txt2"
    role="alert"
    style="opacity: 0;"
  >
    <span
      class="wup-hidden"
    />
    <span>
      Some custom message here
    </span>
  </wup-popup>
</wup-check>
`;

exports[`control.check $show/$hide error 3`] = `
<wup-check>
  <label
    for="txt1"
  >
    <input
      autocomplete="off"
      id="txt1"
      type="checkbox"
    />
    <strong />
    <span
      icon=""
    />
  </label>
</wup-check>
`;

exports[`control.check common tests render + styles 1`] = `<wup-check />`;

exports[`control.check common tests render + styles 2`] = `
<style>
  .wup-hidden, [wup-hidden] {
position: absolute;
height:1px; width:1px;
overflow:hidden;
clip:rect(1px,1px,1px,1px);
min-width:initial;
padding:0;}

  
[wup-icon] {
  display: inline-block;
  cursor: pointer;
  box-shadow: none;
  border: none;
  margin: 0;
  padding: 0;
  width: var(--icon-hover-r, 2em);
  height: var(--icon-hover-r, 2em);
  background: none;
  outline: none;
  border-radius: 50%;
}
[wup-icon]:after {
  content: "";
  display: inline-block;
  border-radius: 50%;
  width: 100%;
  height: 100%;
  background: var(--icon, #000);
  -webkit-mask-size: var(--icon-size, 1em);
  mask-size: var(--icon-size, 1em);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;

  -webkit-mask-image: var(--icon-img);
  mask-image: var(--icon-img);
}
[wup-icon]:focus {
   box-shadow: inset 0 0 0 99999px var(--icon-focus-bg);
}
[wup-icon]:focus:after {
   background: var(--icon-hover, var(--icon, #000));
}
@media (hover: hover) and (pointer: fine) {
  [wup-icon]:hover {
   box-shadow: inset 0 0 0 99999px var(--icon-hover-bg);
  }
  [wup-icon]:hover:after {
    background: var(--icon-hover, var(--icon, #000));
  }
  [wup-icon]:focus:hover {
   opacity: 0.9;
  }
}

  :root {
          --base-focus: #00778d;
          --base-btn-bg: #009fbc;
          --base-btn-text: #fff;
          --base-btn-focus: #005766;
          --base-btn2-bg: var(--base-btn-text);
          --base-btn2-text: var(--base-btn-bg);
          --base-btn3-bg: none;
          --base-btn3-text: inherit;
          --base-sep: #e4e4e4;
          --base-margin: 20px;
          --border-radius: 6px;
          --anim-time: 200ms;
          --anim: var(--anim-time) cubic-bezier(0, 0, 0.2, 1) 0ms;
          --icon-hover-r: 30px;
          --icon-hover-bg: #0001;
          --icon-focus-bg: #0000001a;
          --icon-size: 14px;
        }
        [wupdark] {
          --base-btn-focus: #bdbdbd;
          --base-sep: #141414;
          --icon: #fff;
          --icon-hover-bg: #fff1;
          --icon-focus-bg: #fff2;
          --scroll: #fff2;
          --scroll-hover: #fff3;
        }
  :root {
        --ctrl-padding: 1.5em 1em 0.5em 1em;
        --ctrl-focus: var(--base-focus);
        --ctrl-focus-label: var(--ctrl-focus);
        --ctrl-selected: var(--ctrl-focus);
        --ctrl-label: #5e5e5e;
        --ctrl-icon: var(--ctrl-label);
        --ctrl-icon-size: 1em;
        --ctrl: inherit;
        --ctrl-bg: #fff;
        --ctrl-border: #e6e6e6;
        --ctrl-border-radius: var(--border-radius);
        --ctrl-err: #ad0000;
        --ctrl-err-bg: #fff4fa;
        --ctrl-err-valid: green;
        --ctrl-invalid-border: red;
        --wup-icon-cross: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='768' height='768'%3E%3Cpath d='M674.515 93.949a45.925 45.925 0 0 0-65.022 0L384.001 318.981 158.509 93.487a45.928 45.928 0 0 0-65.022 0c-17.984 17.984-17.984 47.034 0 65.018l225.492 225.494L93.487 609.491c-17.984 17.984-17.984 47.034 0 65.018s47.034 17.984 65.018 0l225.492-225.492 225.492 225.492c17.984 17.984 47.034 17.984 65.018 0s17.984-47.034 0-65.018L449.015 383.999l225.492-225.494c17.521-17.521 17.521-47.034 0-64.559z'/%3E%3C/svg%3E");
        --wup-icon-check: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='768' height='768'%3E%3Cpath d='M37.691 450.599 224.76 635.864c21.528 21.32 56.11 21.425 77.478 0l428.035-426.23c21.47-21.38 21.425-56.11 0-77.478s-56.11-21.425-77.478 0L263.5 519.647 115.168 373.12c-21.555-21.293-56.108-21.425-77.478 0s-21.425 56.108 0 77.478z'/%3E%3C/svg%3E");
        --wup-icon-dot: url("data:image/svg+xml,%3Csvg viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='50' cy='50' r='20'/%3E%3C/svg%3E");
        --wup-icon-back: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='768' height='768'%3E%3Cpath d='m509.8 16.068-329.14 329.14c-21.449 21.449-21.449 56.174 0 77.567l329.14 329.14c21.449 21.449 56.174 21.449 77.567 0s21.449-56.174 0-77.567l-290.36-290.36 290.36-290.36c21.449-21.449 21.449-56.173 0-77.567-21.449-21.394-56.173-21.449-77.567 0z'/%3E%3C/svg%3E");
      }
      [wupdark] {
        --ctrl-bg: none;
        --ctrl-border: #104652;
        --ctrl-label: #919191;
        --ctrl-icon: var(--ctrl-label);
        --ctrl-focus-label: #25a1b6;
        --ctrl-selected: #25a1b6;
        --ctrl-err: #ff6666;
        --ctrl-err-bg: #000;
        --ctrl-err-valid: #54d754;
      }
  :root {
      --ctrl-switch-padding: 1em;
      --ctrl-switch-on: #fff;
      --ctrl-switch-off: #fff;
      --ctrl-switch-off-bg: #9f9f9f;
      --ctrl-switch-on-bg: var(--ctrl-focus);
      --ctrl-switch-shadow: #0003;
      --ctrl-switch-h: var(--ctrl-icon-size);
      --ctrl-switch-w: calc(var(--ctrl-icon-size) * 2.8);
      --ctrl-switch-r: calc(var(--ctrl-icon-size) * 1.4);
     }
    [wupdark] {
      --ctrl-switch-on: #e7e7e7;
      --ctrl-switch-off: #e7e7e7;
      --ctrl-switch-off-bg: #707070;
      --ctrl-switch-shadow: #000;
    }
  :root {
        --ctrl-check-off-bg: #fff;
        --ctrl-check-on-bg: var(--ctrl-focus);
        --ctrl-check-on: #fff;
        --ctrl-check-border-r: 3px;
        --ctrl-check-shadow: #0003;
        --ctrl-check-size: 16px;
      }
      [wupdark] {
        --ctrl-check-off-bg: #e7e7e7;
        --ctrl-check-shadow: #000;
      }
  
      WUP-CHECK {
        --ctrl-focus-border: var(--ctrl-focus);
        contain: style;
        display: block;
        margin: 20px 0;
        box-shadow: 0 0 0 1px var(--ctrl-border);
        border-radius: var(--ctrl-border-radius);
        color: var(--ctrl);
        background: var(--ctrl-bg);
        cursor: pointer;
        -webkit-tap-highlight-color: transparent;
      }
      WUP-CHECK strong,
      WUP-CHECK legend {
        color: var(--ctrl-label);
        pointer-events: none;
      }
      WUP-CHECK[invalid],
      WUP-CHECK[invalid] &gt; [menu] {
        --ctrl-focus-border: var( --ctrl-invalid-border);
        box-shadow: 0 0 3px 0 var(--ctrl-focus-border);
      }
      WUP-CHECK:focus-within,
      WUP-CHECK:focus-within &gt; [menu] {
        box-shadow: 0 0 2px 1px var(--ctrl-focus-border);
      }
      WUP-CHECK:focus-within strong,
      WUP-CHECK:focus-within legend {
        color: var(--ctrl-focus-label);
        pointer-events: initial;
      }
      [disabled] WUP-CHECK,
      WUP-CHECK[disabled] {
        opacity: 0.6;
        cursor: not-allowed;
        -webkit-user-select: none;
        user-select: none;
      }
      [disabled] WUP-CHECK &gt; label,
      WUP-CHECK[disabled] &gt; label {
        pointer-events: none;
      }
      WUP-CHECK label {
        display: flex;
        align-items: center;
        box-sizing: border-box;
        font: inherit;
        cursor: inherit;
        padding: var(--ctrl-padding);
        padding-top: 0;
        padding-bottom: 0;
      }
      WUP-CHECK input,
      WUP-CHECK textarea {
        padding: 0;
        margin: 0;
        cursor: inherit;
      }
      WUP-CHECK [contenteditable=true] {
        margin: var(--ctrl-padding);
        margin-left: 0;
        margin-right: 0;
        cursor: inherit;
      }
      WUP-CHECK strong {
        cursor: inherit;
      }
      WUP-CHECK strong:empty {
        display: none;
      }
      WUP-CHECK [aria-required="true"] + strong:after,
      WUP-CHECK fieldset[aria-required="true"] &gt; legend:after {
        content: "*";
        font-size: larger;
        font-weight: bolder;
        line-height: 0;
      }
      WUP-CHECK [error] {
        cursor: pointer;
        font-size: small;
        color: var(--ctrl-err);
        background: var(--ctrl-err-bg);
        overflow: auto;
        overflow: overlay;
        // text-shadow: 0 0 0 var(--ctrl-err);
      }
      WUP-CHECK [error] ul {
        margin:0; padding:2px 4px 2px;
      }
      WUP-CHECK [error] li {
        display: flex;
        align-items: center;
        margin-left: -5px;
      }
      WUP-CHECK [error] li:before {
        content: '';
        --ctrl-icon-img: var(--wup-icon-dot);
        --ctrl-icon: var(--ctrl-err);
        
display: inline-block;
width: var(--ctrl-icon-size);
min-height: var(--ctrl-icon-size);
box-sizing: content-box;
margin: 0;
padding: 5px;
flex: 0 0 auto;
align-self: stretch;
border: none;
box-shadow: none;
background: var(--ctrl-icon);
-webkit-mask-size: var(--ctrl-icon-size);
mask-size: var(--ctrl-icon-size);
-webkit-mask-repeat: no-repeat;
mask-repeat: no-repeat;
-webkit-mask-position: center;
mask-position: center;
-webkit-mask-image: var(--ctrl-icon-img);
mask-image: var(--ctrl-icon-img);
      }
      WUP-CHECK [error] li[valid] {
        color: var(--ctrl-err-valid);
      }
      WUP-CHECK [error] li[valid]:before {
        content: '';
        --ctrl-icon-img: var(--wup-icon-check);
        --ctrl-icon: var(--ctrl-err-valid);
      }
      WUP-CHECK:focus-within [error] {
        max-height: none;
      }
      @media (hover: hover) and (pointer: fine) {
        WUP-CHECK:hover strong,
        WUP-CHECK[hovered] strong{
          color: var(--ctrl-focus-label);
        }
        WUP-CHECK:hover,
        WUP-CHECK:hover&gt;[menu],
        WUP-CHECK[hovered],
        WUP-CHECK[hovered]&gt;[menu] {
          box-shadow: 0 0 2px 1px var(--ctrl-focus-border);
        }
      }
      WUP-CHECK {
        background: none;
        cursor: pointer;
      }
      WUP-CHECK[readonly] {
        cursor: initial;
      }
      WUP-CHECK label {
        display: flex;
        gap: 0.5em;
        padding: var(--ctrl-switch-padding);
      }
      WUP-CHECK strong {
        box-sizing: border-box;
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;
        font-weight: normal;
        text-decoration: none;
        color: inherit;
      }
      WUP-CHECK [bar] {
        display: inline-flex;
        align-items: center;
        overflow: visible;
        width: var(--ctrl-switch-w);
        min-width: var(--ctrl-switch-w);
        height: var(--ctrl-switch-h);
        border-radius: 999px;
        color: whitesmoke;
        background: var(--ctrl-switch-off-bg);
      }
      
WUP-CHECK [thumb] {
    transform-style: preserve-3d;
  }
WUP-CHECK [thumb]:before {
  z-index: -1;
  position: absolute;
  transform: translate(-50%, -50%) translateZ(-1px);
  left: 50%; top: 50%;
  width: var(--icon-hover-r, 2.4em);
  height: var(--icon-hover-r, 2.4em);
  background: var(--icon-hover, #0001);
  border-radius: 50%;
}
WUP-CHECK:focus-within [thumb] {
  position: relative;
}
WUP-CHECK:focus-within [thumb]:before {
  content: "";
}
@media (hover: hover) and (pointer: fine) {
  WUP-CHECK:hover [thumb] {
    position: relative;
  }
  WUP-CHECK:hover [thumb]:before {
    content: "";
    opacity: 0.8;
  }
}
      WUP-CHECK [thumb] {
        z-index: 2;
        display: inline-block;
        height: var(--ctrl-switch-r);
        width: var(--ctrl-switch-r);
        background: var(--ctrl-switch-off);
        box-shadow: 0 1px 4px 0 var(--ctrl-switch-shadow);
        border-radius: 50%;
        transform: translateX(-1px);
      }
      WUP-CHECK input { 
position: absolute;
height:1px; width:1px;
overflow:hidden;
clip:rect(1px,1px,1px,1px);
min-width:initial;
padding:0; }
      WUP-CHECK[checked] [bar] {
        background-color: var(--ctrl-switch-on-bg);
      }
      WUP-CHECK[checked] [thumb] {
        background: var(--ctrl-switch-on);
        transform: translateX(var(--ctrl-switch-w)) translateX(calc(-100% + 1px));
      }
      WUP-CHECK[w-reverse] label {
        flex-direction: row-reverse;
      }
      WUP-CHECK[w-reverse] strong {
        margin-right: auto;
      }
      @media not all and (prefers-reduced-motion) {
        WUP-CHECK [bar] { transition: background-color var(--anim); }
        WUP-CHECK [thumb] { transition: transform var(--anim); }
      }
       WUP-CHECK [icon] {
        position: initial;
        height: var(--ctrl-check-size);
        width: var(--ctrl-check-size);
        min-width: var(--ctrl-check-size);
        border-radius: var(--ctrl-check-border-r);
        background: var(--ctrl-check-off-bg);
        box-shadow: 0 0 2px 0 var(--ctrl-check-shadow);
      }
      WUP-CHECK[checked] [icon] {
        background: var(--ctrl-check-on-bg);
      }
      WUP-CHECK[checked] [icon]:after {
        --ctrl-icon: var(--ctrl-check-on);
        --ctrl-icon-img: var(--wup-icon-check);
        
display: inline-block;
width: var(--ctrl-icon-size);
min-height: var(--ctrl-icon-size);
box-sizing: content-box;
margin: 0;
padding: 5px;
flex: 0 0 auto;
align-self: stretch;
border: none;
box-shadow: none;
background: var(--ctrl-icon);
-webkit-mask-size: var(--ctrl-icon-size);
mask-size: var(--ctrl-icon-size);
-webkit-mask-repeat: no-repeat;
mask-repeat: no-repeat;
-webkit-mask-position: center;
mask-position: center;
-webkit-mask-image: var(--ctrl-icon-img);
mask-image: var(--ctrl-icon-img);
        content: "";
        top: 0; left: 0;
        padding: 0;
        border-radius: 0;
        height: 100%; width: 100%;
      }
      
WUP-CHECK [icon] {
    transform-style: preserve-3d;
  }
WUP-CHECK [icon]:before {
  z-index: -1;
  position: absolute;
  transform: translate(-50%, -50%) translateZ(-1px);
  left: 50%; top: 50%;
  width: var(--icon-hover-r, 2.4em);
  height: var(--icon-hover-r, 2.4em);
  background: var(--icon-hover, #0001);
  border-radius: 50%;
}
WUP-CHECK:focus-within [icon] {
  position: relative;
}
WUP-CHECK:focus-within [icon]:before {
  content: "";
}
@media (hover: hover) and (pointer: fine) {
  WUP-CHECK:hover [icon] {
    position: relative;
  }
  WUP-CHECK:hover [icon]:before {
    content: "";
    opacity: 0.8;
  }
}
      @media not all and (prefers-reduced-motion) {
        WUP-CHECK [icon] { transition: background-color var(--anim); }
      }
</style>
`;

exports[`control.check common tests snapshot of $defaults 1`] = `
{
  "autoComplete": null,
  "autoFocus": false,
  "clearActions": 2,
  "disabled": false,
  "focusDebounceMs": 100,
  "label": null,
  "name": null,
  "readOnly": false,
  "reverse": false,
  "storage": "local",
  "storageKey": "",
  "validateDebounceMs": 500,
  "validationCase": 13,
  "validationRules": {
    "$alwaysInvalid": [Function],
    "$alwaysValid": [Function],
    "required": [Function],
  },
  "validationShowAll": false,
  "validations": null,
}
`;

exports[`control.check common tests snapshot of $defaults 2`] = `undefined`;

exports[`control.check common tests snapshot of $defaults 3`] = `
[
  "defaultchecked",
  "disabled",
  "readonly",
  "w-autocomplete",
  "w-autofocus",
  "w-clearactions",
  "w-disabled",
  "w-focusdebouncems",
  "w-initvalue",
  "w-label",
  "w-name",
  "w-readonly",
  "w-reverse",
  "w-storage",
  "w-storagekey",
  "w-validatedebouncems",
  "w-validationcase",
  "w-validationrules",
  "w-validations",
  "w-validationshowall",
]
`;

exports[`control.check validations options.validationCase 1`] = `
<wup-check
  checked=""
>
  <label
    for="txt1"
  >
    <input
      autocomplete="off"
      id="txt1"
      type="checkbox"
    />
    <strong />
    <span
      icon=""
    />
  </label>
</wup-check>
`;

exports[`control.check validations options.validationCase 2`] = `
<wup-check
  checked=""
  invalid=""
  required=""
>
  <label
    for="txt1"
  >
    <input
      aria-describedby="txt3"
      aria-required="true"
      autocomplete="off"
      id="txt1"
      type="checkbox"
    />
    <strong>
      First Input
    </strong>
    <span
      icon=""
    />
  </label>
  <wup-popup
    aria-atomic="true"
    aria-live="off"
    error=""
    id="txt3"
    style="display: none;"
  >
    <span
      class="wup-hidden"
    >
      Error for First Input:
    </span>
    <span>
      custom err here
    </span>
  </wup-popup>
</wup-check>
`;

exports[`control.check validations options.validationCase 3`] = `
<wup-check
  invalid=""
>
  <label
    for="txt1"
  >
    <input
      aria-describedby="txt4"
      autocomplete="off"
      id="txt1"
      type="checkbox"
    />
    <strong>
      First Input
    </strong>
    <span
      icon=""
    />
  </label>
  <wup-popup
    aria-atomic="true"
    aria-live="off"
    error=""
    id="txt4"
    role="alert"
    style="display: none;"
  >
    <span
      class="wup-hidden"
    >
      Error for First Input:
    </span>
    <span>
      Always error
    </span>
  </wup-popup>
</wup-check>
`;

exports[`control.check with form 1`] = `
<wup-form
  role="form"
>
  <wup-check>
    <label
      for="txt1"
    >
      <input
        autocomplete="off"
        id="txt1"
        type="checkbox"
      />
      <strong>
        First Input
      </strong>
      <span
        icon=""
      />
    </label>
  </wup-check>
</wup-form>
`;
